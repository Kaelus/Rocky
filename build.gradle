plugins {
    id 'java'
    id 'com.google.protobuf' version '0.9.4'
    id 'eclipse'
}

//apply plugin: 'java'
////apply plugin: 'application'
//apply plugin: 'eclipse'

//sourceCompatibility = 1.9
//version = '0.1'
//jar {
//    manifest {
//    	     attributes 'Implementation-Title': 'drmbt mongo',
//	     		'Implementation-Version': version
//    }
//}

//version = '1.0'
//sourceCompatibility = 1.8
//targetCompatibility = 1.8
java {
     version = '1.0'
     sourceCompatibility = JavaVersion.VERSION_1_8
     targetCompatibility = JavaVersion.VERSION_1_8
}


//create a single Jar with all dependencies
task fatJar(type: Jar) {
     zip64 true
     duplicatesStrategy = DuplicatesStrategy.EXCLUDE
     group = 'rocky'
	 description = 'rocky fatJar build task'
     manifest {
     	      attributes 'Implementation-Title': 'Gradle Jar File Example',
	      		 'Implementation-Version': version,
			 'Main-Class': 'rocky.ctrl.RockyController'
     }
     //baseName = project.name + '-all'
     archiveBaseName = project.name + '-all'
     from {
     	  //configurations.compile.collect {
	  configurations.compileClasspath.collect {
	  				 it.isDirectory() ? it : zipTree(it)
					 }
	}

     // Correct way to include dependencies
     from {
         configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
     }

     // Ensure META-INF/services files are merged properly
     from {
         configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
     } {
         include("META-INF/services/**")
     } 

     with jar
}

repositories {
    mavenCentral()
}

def grpcVersion = '1.70.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.25.5'
def protocVersion = protobufVersion

dependencies {

    // gRPC
    
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly "org.apache.tomcat:annotations-api:6.0.53"

    // examples/advanced need this for JsonFormat
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation "io.grpc:grpc-inprocess:${grpcVersion}"
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:4.4.0"


    // Rocky
    
    //compile 'org.mongodb:mongodb-driver:3.6.0'
    //compile 'org.mongodb:mongodb-driver:3.1.0'
    //compile 'org.apache.zookeeper:zookeeper:3.4.11'
    //compile 'com.datastax.oss:java-driver-core:4.3.1'
    //compile 'com.datastax.oss:java-driver-query-builder:4.3.1'
    //compile 'com.datastax.oss:java-driver-mapper-runtime:4.3.1'
    //compile group: 'com.google.guava', name: 'guava', version: '29.0-jre'
    implementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'
    
    // https://mvnrepository.com/artifact/org.foundationdb/fdb-java
	//compile group: 'org.foundationdb', name: 'fdb-java', version: '5.2.5'
	implementation group: 'org.foundationdb', name: 'fdb-java', version: '5.2.5'
	// https://mvnrepository.com/artifact/org.hdrhistogram/HdrHistogram
	//compile group: 'org.hdrhistogram', name: 'HdrHistogram', version: '1.2.1'
	implementation group: 'org.hdrhistogram', name: 'HdrHistogram', version: '1.2.1'
	//compile group: 'com.github.spullara.cli-parser', name: 'cli-parser', version: '1.1.2'
	implementation group: 'com.github.spullara.cli-parser', name: 'cli-parser', version: '1.1.2'
    // https://mvnrepository.com/artifact/io.netty/netty-all
	//compile group: 'io.netty', name: 'netty-all', version: '4.0.23.Final'
	implementation group: 'io.netty', name: 'netty-all', version: '4.0.23.Final'
	// https://mvnrepository.com/artifact/com.google.guava/failureaccess
	//compile group: 'com.google.guava', name: 'failureaccess', version: '1.0.1'
	implementation group: 'com.google.guava', name: 'failureaccess', version: '1.0.1'
	// https://mvnrepository.com/artifact/com.google.guava/listenablefuture
	//compile group: 'com.google.guava', name: 'listenablefuture', version: '9999.0-empty-to-avoid-conflict-with-guava'
	implementation group: 'com.google.guava', name: 'listenablefuture', version: '9999.0-empty-to-avoid-conflict-with-guava'
	// https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305
	//compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
	implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
	// https://mvnrepository.com/artifact/org.checkerframework/checker-qual
	//compile group: 'org.checkerframework', name: 'checker-qual', version: '2.11.1'
	implementation group: 'org.checkerframework', name: 'checker-qual', version: '2.11.1'
	// https://mvnrepository.com/artifact/com.google.errorprone/error_prone_annotations
	//compile group: 'com.google.errorprone', name: 'error_prone_annotations', version: '2.3.4'
	implementation group: 'com.google.errorprone', name: 'error_prone_annotations', version: '2.3.4'
	// https://mvnrepository.com/artifact/com.google.j2objc/j2objc-annotations
	//compile group: 'com.google.j2objc', name: 'j2objc-annotations', version: '1.3'
	implementation group: 'com.google.j2objc', name: 'j2objc-annotations', version: '1.3'
	//compile group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.11.842'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.11.842'
	//compile group: 'org.iq80.leveldb', name: 'leveldb', version: '0.12'
	implementation group: 'org.iq80.leveldb', name: 'leveldb', version: '0.12'
	//compile group: 'org.fusesource.leveldbjni', name: 'leveldbjni-all', version: '1.8'
	implementation group: 'org.fusesource.leveldbjni', name: 'leveldbjni-all', version: '1.8'
	implementation group: 'org.apache.xmlrpc', name: 'xmlrpc-client', version: '3.1.3'
	implementation group: 'org.apache.xmlrpc', name: 'xmlrpc-server', version: '3.1.3'
	implementation group: 'org.apache.xmlrpc', name: 'xmlrpc-common', version: '3.1.3'

	// https://mvnrepository.com/artifact/junit/junit
	//testCompile group: 'junit', name: 'junit', version: '5.5.1'
	//testCompile group: 'junit', name: 'junit', version: '4.13.2'
	testImplementation group: 'junit', name: 'junit', version: '4.13.2'
	// https://mvnrepository.com/artifact/org.hamcrest/hamcrest-core
	//testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
	testImplementation group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'	
}

// gRPC
protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

[compileJava, compileTestJava]*.options*.compilerArgs = ['-Xlint:all']

//// Define the main class for the application
//mainClassName = 'strata/conex/TestingEngine'
