// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "rocky.timetravel";
option java_outer_classname = "RockyTimeTravelProto";
option objc_class_prefix = "RTTP";

package rockytimetravel;

// The time travel service definition.
service TimeTraveler {
  // Get the current status
  rpc GetStatus (GetStatusRequest) returns (GetStatusReply) {}
  // Request to switch the role 
  rpc SwitchRole (SwitchRoleRequest) returns (SwitchRoleReply) {}
  // Rewind to the older state
  rpc Rewind (RewindRequest) returns (RewindReply) {}
  // Replay to the newer state
  rpc Replay (ReplayRequest) returns (ReplayReply) {}
}

// The request message containing the user's name.
message GetStatusRequest {

}

// The response message containing the greetings
message GetStatusReply {
  string ackMsg = 1;
  int32 role = 2;
  int64 epoch = 3;
  int64 latestEpoch = 4;
}


// The request message containing the user's name.
message SwitchRoleRequest {
  int32 roleFrom = 1;
  int32 roleTo = 2;
}

// The response message containing the greetings
message SwitchRoleReply {
  string ackMsg = 1;
  int32 roleNew = 2;
}


// The request message containing the user's name.
message RewindRequest {
  int64 epochFrom = 1;
  int64 epochTo = 2;
}

// The response message containing the greetings
message RewindReply {
  string ackMsg = 1;
  int64 epochNew = 2;
}


// The request message containing the user's name.
message ReplayRequest {
  int64 epochFrom = 1;
  int64 epochTo = 2;
}

// The response message containing the greetings
message ReplayReply {
  string ackMsg = 1;
  int64 epochNew = 2;
}


